@startuml
title Statemachine Broker

state send {
[*] -> Queue
Queue -> SPIrequest : start timer
SPIrequest -> [*]
}
state poll {
[*]  --> SPIdummy
SPIdummy : Wait cycle time before send
SPIdummy --> SPIread
SPIread --> FailedSend : SPI timeout
SPIread --> CheckQueue : message
CheckQueue : search message in queue
CheckQueue --> SPIresponse : message found in queue
SPIresponse -> SPIdummy : message not found
SPIresponse : send evResponse

FailedSend --> SPIdummy : (retry > 0)
FailedSend --> [*] : (retry = 0)
FailedSend: #Retry?
}


state timer_alert {
[*] --> CheckQueueTimeout
CheckQueueTimeout --> Timeout : message found
Timeout -> [*]
CheckQueueTimeout --> [*] : message not found
Timeout : send evTimeout
Timeout : delete item from queue
}

[*] -> poll
poll --> send : evRequest()
poll -> timer_alert : evTimer
timer_alert -> poll
send --> poll 
poll -up-> failure

@enduml
